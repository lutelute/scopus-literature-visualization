name: クロスプラットフォームテスト

on:
  push:
    branches: [ main, develop, feature/windows-support ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Python ${{ matrix.python-version }} セットアップ
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 依存関係インストール (Unix)
      if: runner.os != 'Windows'
      run: |
        python -m pip install --upgrade pip
        python setup.py --auto
    
    - name: 依存関係インストール (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        python setup.py --auto
    
    - name: クロスプラットフォームテスト実行
      run: |
        python test_crossplatform.py
    
    - name: 仮想環境アクティベーションテスト (Unix)
      if: runner.os != 'Windows'
      run: |
        source .venv/bin/activate
        python -c "import pandas, requests, requests_cache, tqdm; print('✅ 仮想環境パッケージ正常')"
    
    - name: 仮想環境アクティベーションテスト (Windows)
      if: runner.os == 'Windows'
      run: |
        .venv\Scripts\activate
        python -c "import pandas, requests, requests_cache, tqdm; print('✅ 仮想環境パッケージ正常')"
    
    - name: システムテスト実行 (Unix)
      if: runner.os != 'Windows' && hashFiles('dev_tools/テスト実行.py') != ''
      run: |
        source .venv/bin/activate
        python dev_tools/テスト実行.py
    
    - name: システムテスト実行 (Windows)
      if: runner.os == 'Windows' && hashFiles('dev_tools/テスト実行.py') != ''
      run: |
        .venv\Scripts\activate
        python dev_tools\テスト実行.py